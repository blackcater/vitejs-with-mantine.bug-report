{"version":3,"file":"Text.js","sources":["../../src/Text/Text.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useMantineTheme, DefaultProps, MantineSize } from '@mantine/theme';\nimport { ComponentPassThrough } from '@mantine/types';\nimport useStyles from './Text.styles';\n\nexport interface TextProps extends DefaultProps {\n  /** Text itself */\n  children?: React.ReactNode;\n\n  /** Predefined font-size from theme.fontSizes */\n  size?: MantineSize;\n\n  /** Text color from theme */\n  color?: string;\n\n  /** Sets font-weight css property */\n  weight?: React.CSSProperties['fontWeight'];\n\n  /** Sets text-transform css property */\n  transform?: 'capitalize' | 'uppercase' | 'lowercase';\n\n  /** Sets text-align css property */\n  align?: 'left' | 'center' | 'right';\n\n  /** Link or text variant */\n  variant?: 'text' | 'link';\n}\n\nexport function Text<T extends React.ElementType = 'div', U = HTMLDivElement>({\n  className,\n  component = 'div',\n  children,\n  size = 'md',\n  weight,\n  transform,\n  style,\n  color,\n  align,\n  variant = 'text',\n  themeOverride,\n  elementRef,\n  ...others\n}: ComponentPassThrough<T, TextProps> & { elementRef?: React.ForwardedRef<U> }) {\n  const classes = useStyles({ variant, color, size, theme: useMantineTheme(themeOverride) });\n\n  return React.createElement(\n    component,\n    {\n      className: cx(classes.text, className),\n      style: { fontWeight: weight, textTransform: transform, textAlign: align, ...style },\n      ref: elementRef,\n      ...others,\n    },\n    children\n  );\n}\n\nText.displayName = '@mantine/core/Text';\n\nexport function Anchor<T extends React.ElementType = 'a', U = HTMLAnchorElement>({\n  component = 'a',\n  ...others\n}: ComponentPassThrough<T, TextProps> & { elementRef?: React.ForwardedRef<U> }) {\n  return <Text component={component} variant=\"link\" {...others} />;\n}\n\nAnchor.displayName = '@mantine/core/Anchor';\n\nexport type AnchorProps = React.ComponentProps<typeof Anchor>;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cA6B8E,IAcE;AAdF,eAC5E;AAAA;AAAA,IACA,YAAY;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV;AAAA,IACA;AAAA,MAZ4E,IAazE,mBAbyE,IAazE;AAAA,IAZH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,UAAU,UAAU,CAAE,SAAS,OAAO,MAAM,OAAO,gBAAgB;AAEzE,SAAO,MAAM,cACX,WACA;AAAA,IACE,WAAW,GAAG,QAAQ,MAAM;AAAA,IAC5B,OAAO,gBAAE,YAAY,QAAQ,eAAe,WAAW,WAAW,QAAU;AAAA,IAC5E,KAAK;AAAA,KACF,SAEL;AAAA;AAIJ,KAAK,cAAc;gBAE8D,IAGD;AAHC,eAC/E;AAAA,gBAAY;AAAA,MADmE,IAE5E,mBAF4E,IAE5E;AAAA,IADH;AAAA;AAGA,6CAAQ,MAAD;AAAA,IAAM;AAAA,IAAsB,SAAQ;AAAA,KAAW;AAAA;AAGxD,OAAO,cAAc;;;;"}