{"version":3,"file":"Checkbox.js","sources":["../../src/Checkbox/Checkbox.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useId } from '@mantine/hooks';\nimport { DefaultProps, useMantineTheme, MantineSize } from '@mantine/theme';\nimport { CheckboxIcon } from './CheckboxIcon';\nimport useStyles, { sizes } from './Checkbox.styles';\n\nexport const CHECKBOX_SIZES = sizes;\n\nexport interface CheckboxProps\n  extends DefaultProps,\n    Omit<React.ComponentPropsWithoutRef<'input'>, 'type' | 'size'> {\n  /** Checkbox checked and intermediate state color from theme, defaults to theme.primaryColor */\n  color?: string;\n\n  /** Predefined label font-size and checkbox width and height in px */\n  size?: MantineSize;\n\n  /** Checkbox label */\n  label?: React.ReactNode;\n\n  /** Intermediate state of checkbox, overwrites checked */\n  intermediate?: boolean;\n\n  /** Style properties added to input element */\n  inputStyle?: React.CSSProperties;\n\n  /** Class name added to input element */\n  inputClassName?: string;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n\n  /** Id is used to bind input and label, if not passed unique id will be generated for each input */\n  id?: string;\n\n  /** Get input ref */\n  elementRef?: React.ForwardedRef<HTMLInputElement>;\n}\n\nexport function Checkbox({\n  className,\n  checked,\n  onChange,\n  color,\n  themeOverride,\n  label,\n  disabled,\n  intermediate,\n  id,\n  size,\n  wrapperProps,\n  style,\n  inputStyle,\n  inputClassName,\n  elementRef,\n  ...others\n}: CheckboxProps) {\n  const uuid = useId(id);\n  const classes = useStyles({ size, color, theme: useMantineTheme(themeOverride) });\n\n  return (\n    <div className={cx(classes.wrapper, className)} style={style} {...wrapperProps}>\n      <div className={classes.checkboxWrapper}>\n        <input\n          {...others}\n          id={uuid}\n          ref={elementRef}\n          type=\"checkbox\"\n          className={cx(classes.checkbox, inputClassName)}\n          checked={intermediate || checked}\n          onChange={onChange}\n          disabled={disabled}\n          style={inputStyle}\n        />\n        <CheckboxIcon intermediate={intermediate} className={classes.icon} />\n      </div>\n\n      {label && (\n        <label className={classes.label} htmlFor={uuid}>\n          {label}\n        </label>\n      )}\n    </div>\n  );\n}\n\nCheckbox.displayName = '@mantine/core/Checkbox';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAOa,iBAAiB;kBAiCL,IAiBP;AAjBO,eACvB;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAfuB,IAgBpB,mBAhBoB,IAgBpB;AAAA,IAfH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,OAAO,MAAM;AACnB,QAAM,UAAU,UAAU,CAAE,MAAM,OAAO,OAAO,gBAAgB;AAEhE,6CACG,OAAD;AAAA,IAAK,WAAW,GAAG,QAAQ,SAAS;AAAA,IAAY;AAAA,KAAkB,mDAC/D,OAAD;AAAA,IAAK,WAAW,QAAQ;AAAA,yCACrB,SAAD,iCACM,SADN;AAAA,IAEE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAK;AAAA,IACL,WAAW,GAAG,QAAQ,UAAU;AAAA,IAChC,SAAS,gBAAgB;AAAA,IACzB;AAAA,IACA;AAAA,IACA,OAAO;AAAA,2CAER,cAAD;AAAA,IAAc;AAAA,IAA4B,WAAW,QAAQ;AAAA,OAG9D,6CACE,SAAD;AAAA,IAAO,WAAW,QAAQ;AAAA,IAAO,SAAS;AAAA,KACvC;AAAA;AAOX,SAAS,cAAc;;;;"}