{"version":3,"file":"InputWrapper.js","sources":["../../src/InputWrapper/InputWrapper.tsx"],"sourcesContent":["import React, { createElement } from 'react';\nimport cx from 'clsx';\nimport { DefaultProps, useMantineTheme } from '@mantine/theme';\nimport { Text } from '../Text/Text';\nimport useStyles from './InputWrapper.styles';\n\nexport interface InputWrapperBaseProps {\n  /** Input label, displayed before input */\n  label?: React.ReactNode;\n\n  /** Input description, displayed after label */\n  description?: React.ReactNode;\n\n  /** Displays error message after input */\n  error?: React.ReactNode;\n\n  /** Adds red asterisk on the right side of label */\n  required?: boolean;\n}\n\nexport interface InputWrapperProps\n  extends DefaultProps,\n    InputWrapperBaseProps,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Input that should be wrapped */\n  children: React.ReactNode;\n\n  /** htmlFor label prop */\n  id?: string;\n\n  /** Render label as label with htmlFor or as div */\n  labelElement?: 'label' | 'div';\n}\n\nexport function InputWrapper({\n  className,\n  label,\n  children,\n  required,\n  id,\n  error,\n  description,\n  themeOverride,\n  labelElement = 'label',\n  ...others\n}: InputWrapperProps) {\n  const classes = useStyles({ theme: useMantineTheme(themeOverride) });\n  const labelProps = labelElement === 'label' ? { htmlFor: id } : {};\n  const inputLabel = createElement(\n    labelElement,\n    { ...labelProps, className: classes.label },\n    <>\n      {label}\n      {required && (\n        <span data-mantine-required className={classes.required}>\n          {' '}\n          *\n        </span>\n      )}\n    </>\n  );\n\n  return (\n    <div className={cx(classes.inputWrapper, className)} {...others}>\n      {label && inputLabel}\n\n      {description && (\n        <Text\n          themeOverride={themeOverride}\n          data-mantine-description\n          color=\"gray\"\n          size=\"xs\"\n          className={classes.description}\n        >\n          {description}\n        </Text>\n      )}\n\n      {children}\n\n      {typeof error !== 'boolean' && error && (\n        <Text\n          themeOverride={themeOverride}\n          data-mantine-error\n          color=\"red\"\n          size=\"sm\"\n          className={classes.error}\n        >\n          {error}\n        </Text>\n      )}\n    </div>\n  );\n}\n\nInputWrapper.displayName = '@mantine/core/InputWrapper';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAkC6B,IAWP;AAXO,eAC3B;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,eAAe;AAAA,MATY,IAUxB,mBAVwB,IAUxB;AAAA,IATH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,UAAU,UAAU,CAAE,OAAO,gBAAgB;AACnD,QAAM,aAAa,iBAAiB,UAAU,CAAE,SAAS,MAAO;AAChE,QAAM,aAAa,cACjB,cACA,iCAAK,aAAL,CAAiB,WAAW,QAAQ,mEAEjC,OACA,gDACE,QAAD;AAAA,IAAM,yBAAqB;AAAA,IAAC,WAAW,QAAQ;AAAA,KAC5C,KAAI;AAOb,6CACG,OAAD;AAAA,IAAK,WAAW,GAAG,QAAQ,cAAc;AAAA,KAAgB,SACtD,SAAS,YAET,mDACE,MAAD;AAAA,IACE;AAAA,IACA,4BAAwB;AAAA,IACxB,OAAM;AAAA,IACN,MAAK;AAAA,IACL,WAAW,QAAQ;AAAA,KAElB,cAIJ,UAEA,OAAO,UAAU,aAAa,6CAC5B,MAAD;AAAA,IACE;AAAA,IACA,sBAAkB;AAAA,IAClB,OAAM;AAAA,IACN,MAAK;AAAA,IACL,WAAW,QAAQ;AAAA,KAElB;AAAA;AAOX,aAAa,cAAc;;;;"}