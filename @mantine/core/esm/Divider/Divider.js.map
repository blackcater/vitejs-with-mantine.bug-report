{"version":3,"file":"Divider.js","sources":["../../src/Divider/Divider.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useMantineTheme, DefaultProps, MantineNumberSize } from '@mantine/theme';\nimport useStyles, { sizes } from './Divider.styles';\nimport { Text } from '../Text/Text';\n\nexport const DIVIDER_SIZES = sizes;\n\nexport interface DividerProps extends DefaultProps, React.ComponentPropsWithoutRef<'hr'> {\n  /** Line color from theme, defaults to gray in light color scheme and to dark in dark color scheme */\n  color?: string;\n\n  /** Line orientation */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** Sets height in horizontal orientation and with in vertical */\n  size?: MantineNumberSize;\n\n  /** Adds text after line in horizontal orientation */\n  label?: React.ReactNode;\n\n  /** Label position */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Props spread to Text component in label */\n  labelProps?: Record<string, any>;\n\n  /** Divider borderStyle */\n  variant?: 'solid' | 'dashed' | 'dotted';\n\n  /** Top and bottom margins for horizontal variant, left and right for vertical, xs, sm, md, lg, xl for value from theme.spacing, number for margins in px */\n  margins?: MantineNumberSize;\n}\n\nexport function Divider({\n  color,\n  className,\n  orientation = 'horizontal',\n  size = 'xs',\n  label,\n  labelPosition = 'left',\n  labelProps,\n  themeOverride,\n  variant = 'solid',\n  margins = 0,\n  ...others\n}: DividerProps) {\n  const theme = useMantineTheme(themeOverride);\n  const _color = color || (theme.colorScheme === 'dark' ? 'dark' : 'gray');\n  const classes = useStyles({\n    color: _color,\n    theme,\n    margins,\n    size,\n    variant,\n  });\n\n  return (\n    <div\n      data-mantine-hr\n      className={cx(\n        {\n          [classes.vertical]: orientation === 'vertical',\n          [classes.horizontal]: orientation === 'horizontal',\n          [classes.withLabel]: !!label && orientation === 'horizontal',\n        },\n        className\n      )}\n      {...others}\n    >\n      {!!label && orientation === 'horizontal' && (\n        <Text\n          data-mantine-label\n          {...labelProps}\n          color={_color}\n          size={labelProps?.size || 'xs'}\n          style={{ marginTop: 2 }}\n          className={cx(classes.label, classes[labelPosition])}\n        >\n          {label}\n        </Text>\n      )}\n    </div>\n  );\n}\n\nDivider.displayName = '@mantine/core/Divider';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMa,gBAAgB;iBA4BL,IAYP;AAZO,eACtB;AAAA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd,OAAO;AAAA,IACP;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV,UAAU;AAAA,MAVY,IAWnB,mBAXmB,IAWnB;AAAA,IAVH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,QAAQ,gBAAgB;AAC9B,QAAM,SAAS,gBAAgB,gBAAgB,SAAS,SAAS;AACjE,QAAM,UAAU,UAAU;AAAA,IACxB,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,6CACG,OAAD;AAAA,IACE,mBAAe;AAAA,IACf,WAAW,GACT;AAAA,OACG,QAAQ,WAAW,gBAAgB;AAAA,OACnC,QAAQ,aAAa,gBAAgB;AAAA,OACrC,QAAQ,YAAY,CAAC,CAAC,SAAS,gBAAgB;AAAA,OAElD;AAAA,KAEE,SAEH,CAAC,CAAC,SAAS,gBAAgB,oDACzB,MAAD;AAAA,IACE,sBAAkB;AAAA,KACd,aAFN;AAAA,IAGE,OAAO;AAAA,IACP,MAAM,0CAAY,SAAQ;AAAA,IAC1B,OAAO,CAAE,WAAW;AAAA,IACpB,WAAW,GAAG,QAAQ,OAAO,QAAQ;AAAA,MAEpC;AAAA;AAOX,QAAQ,cAAc;;;;"}