{"version":3,"file":"Divider.styles.js","sources":["../../src/Divider/Divider.styles.ts"],"sourcesContent":["import React from 'react';\nimport {\n  createMemoStyles,\n  MantineNumberSize,\n  MantineTheme,\n  getSizeValue,\n  getThemeColor,\n} from '@mantine/theme';\n\ninterface DividerStylesProps {\n  theme: MantineTheme;\n  size: MantineNumberSize;\n  margins: MantineNumberSize;\n  variant: React.CSSProperties['borderTopStyle'];\n  color: string;\n}\n\nexport const sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5,\n};\n\nexport default createMemoStyles({\n  withLabel: {\n    borderTop: '0 !important',\n  },\n\n  left: {\n    '&::before': {\n      display: 'none',\n    },\n  },\n\n  right: {\n    '&::after': {\n      display: 'none',\n    },\n  },\n\n  label: ({ theme, color, variant }: DividerStylesProps) => ({\n    display: 'flex',\n    alignItems: 'center',\n    color: color === 'dark' ? theme.colors.dark[1] : getThemeColor({ theme, color, shade: 6 }),\n\n    '&::before': {\n      content: '\"\"',\n      flex: 1,\n      height: 1,\n      borderTop: `1px ${variant} ${getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === 'dark' ? 3 : 4,\n      })}`,\n      marginRight: theme.spacing.xs,\n    },\n\n    '&::after': {\n      content: '\"\"',\n      flex: 1,\n      borderTop: `1px ${variant} ${getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === 'dark' ? 3 : 4,\n      })}`,\n      marginLeft: theme.spacing.xs,\n    },\n  }),\n\n  horizontal: ({ theme, size, variant, color, margins }: DividerStylesProps) => ({\n    border: 0,\n    borderTopWidth: getSizeValue({ size, sizes }),\n    borderTopColor: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 4 }),\n    borderTopStyle: variant,\n    margin: 0,\n    marginTop: getSizeValue({ size: margins, sizes: theme.spacing }),\n    marginBottom: getSizeValue({ size: margins, sizes: theme.spacing }),\n  }),\n\n  vertical: ({ theme, size, variant, color, margins }: DividerStylesProps) => ({\n    border: 0,\n    borderLeftWidth: getSizeValue({ size, sizes }),\n    borderLeftColor: getThemeColor({ theme, color, shade: 4 }),\n    borderLeftStyle: variant,\n    marginLeft: getSizeValue({ size: margins, sizes: theme.spacing }),\n    marginRight: getSizeValue({ size: margins, sizes: theme.spacing }),\n  }),\n});\n"],"names":[],"mappings":";;MAiBa,QAAQ;AAAA,EACnB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA;AAGN,gBAAe,iBAAiB;AAAA,EAC9B,WAAW;AAAA,IACT,WAAW;AAAA;AAAA,EAGb,MAAM;AAAA,IACJ,aAAa;AAAA,MACX,SAAS;AAAA;AAAA;AAAA,EAIb,OAAO;AAAA,IACL,YAAY;AAAA,MACV,SAAS;AAAA;AAAA;AAAA,EAIb,OAAO,CAAC,CAAE,OAAO,OAAO;AAAmC,IACzD,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO,UAAU,SAAS,MAAM,OAAO,KAAK,KAAK,cAAc,CAAE,OAAO,OAAO,OAAO;AAAA,IAEtF,aAAa;AAAA,MACX,SAAS;AAAA,MACT,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,WAAW,OAAO,WAAW,cAAc;AAAA,QACzC;AAAA,QACA;AAAA,QACA,OAAO,MAAM,gBAAgB,SAAS,IAAI;AAAA;AAAA,MAE5C,aAAa,MAAM,QAAQ;AAAA;AAAA,IAG7B,YAAY;AAAA,MACV,SAAS;AAAA,MACT,MAAM;AAAA,MACN,WAAW,OAAO,WAAW,cAAc;AAAA,QACzC;AAAA,QACA;AAAA,QACA,OAAO,MAAM,gBAAgB,SAAS,IAAI;AAAA;AAAA,MAE5C,YAAY,MAAM,QAAQ;AAAA;AAAA;AAAA,EAI9B,YAAY,CAAC,CAAE,OAAO,MAAM,SAAS,OAAO;AAAmC,IAC7E,QAAQ;AAAA,IACR,gBAAgB,aAAa,CAAE,MAAM;AAAA,IACrC,gBAAgB,cAAc,CAAE,OAAO,OAAO,OAAO,MAAM,gBAAgB,SAAS,IAAI;AAAA,IACxF,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,WAAW,aAAa,CAAE,MAAM,SAAS,OAAO,MAAM;AAAA,IACtD,cAAc,aAAa,CAAE,MAAM,SAAS,OAAO,MAAM;AAAA;AAAA,EAG3D,UAAU,CAAC,CAAE,OAAO,MAAM,SAAS,OAAO;AAAmC,IAC3E,QAAQ;AAAA,IACR,iBAAiB,aAAa,CAAE,MAAM;AAAA,IACtC,iBAAiB,cAAc,CAAE,OAAO,OAAO,OAAO;AAAA,IACtD,iBAAiB;AAAA,IACjB,YAAY,aAAa,CAAE,MAAM,SAAS,OAAO,MAAM;AAAA,IACvD,aAAa,aAAa,CAAE,MAAM,SAAS,OAAO,MAAM;AAAA;AAAA;;;;;"}