{"version":3,"file":"LoadingOverlay.js","sources":["../../src/LoadingOverlay/LoadingOverlay.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { DefaultProps, useMantineTheme } from '@mantine/theme';\nimport { useReducedMotion } from '@mantine/hooks';\nimport { Overlay } from '../Overlay/Overlay';\nimport { Transition } from '../Transition/Transition';\nimport { Loader, LoaderProps } from '../Loader/Loader';\nimport useStyles from './LoadingOverlay.styles';\n\nexport interface LoadingOverlayProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  /** Provide custom loader */\n  loader?: React.ReactNode;\n\n  /** Loader component props */\n  loaderProps?: LoaderProps;\n\n  /** Sets overlay opacity */\n  overlayOpacity?: number;\n\n  /** Sets overlay color, defaults to theme.white in light theme and to theme.colors.dark[5] in dark theme */\n  overlayColor?: string;\n\n  /** Loading overlay z-index */\n  zIndex?: number;\n\n  /** If visible overlay will take 100% width and height of first parent with relative position and overlay all of its content */\n  visible: boolean;\n\n  /** Appear and disappear animation duration */\n  transitionDuration?: number;\n}\n\nexport function LoadingOverlay({\n  className,\n  visible,\n  loaderProps = {},\n  overlayOpacity = 0.75,\n  overlayColor,\n  themeOverride,\n  transitionDuration = 200,\n  zIndex = 1000,\n  style,\n  loader,\n  ...others\n}: LoadingOverlayProps) {\n  const theme = useMantineTheme(themeOverride);\n  const classes = useStyles();\n  const reduceMotion = useReducedMotion();\n  const duration = reduceMotion ? 1 : transitionDuration;\n\n  return (\n    <Transition\n      duration={duration}\n      mounted={visible}\n      transition=\"fade\"\n      themeOverride={themeOverride}\n    >\n      {(transitionStyles) => (\n        <div\n          className={cx(classes.loadingOverlay, className)}\n          style={{ ...transitionStyles, ...style, zIndex }}\n          {...others}\n        >\n          {loader ? (\n            <div style={{ zIndex: zIndex + 1 }}>{loader}</div>\n          ) : (\n            <Loader themeOverride={themeOverride} style={{ zIndex: zIndex + 1 }} {...loaderProps} />\n          )}\n\n          <Overlay\n            opacity={overlayOpacity}\n            zIndex={zIndex}\n            color={\n              overlayColor || (theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.white)\n            }\n          />\n        </div>\n      )}\n    </Transition>\n  );\n}\n\nLoadingOverlay.displayName = '@mantine/core/LoadingOverlay';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAgC+B,IAYP;AAZO,eAC7B;AAAA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd,iBAAiB;AAAA,IACjB;AAAA,IACA;AAAA,IACA,qBAAqB;AAAA,IACrB,SAAS;AAAA,IACT;AAAA,IACA;AAAA,MAV6B,IAW1B,mBAX0B,IAW1B;AAAA,IAVH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,QAAQ,gBAAgB;AAC9B,QAAM,UAAU;AAChB,QAAM,eAAe;AACrB,QAAM,WAAW,eAAe,IAAI;AAEpC,6CACG,YAAD;AAAA,IACE;AAAA,IACA,SAAS;AAAA,IACT,YAAW;AAAA,IACX;AAAA,KAEC,CAAC,yDACC,OAAD;AAAA,IACE,WAAW,GAAG,QAAQ,gBAAgB;AAAA,IACtC,OAAO,gDAAK,mBAAqB,QAA1B,CAAiC;AAAA,KACpC,SAEH,6CACE,OAAD;AAAA,IAAK,OAAO,CAAE,QAAQ,SAAS;AAAA,KAAM,8CAEpC,QAAD;AAAA,IAAQ;AAAA,IAA8B,OAAO,CAAE,QAAQ,SAAS;AAAA,KAAS,mDAG1E,SAAD;AAAA,IACE,SAAS;AAAA,IACT;AAAA,IACA,OACE,uBAAuB,gBAAgB,SAAS,MAAM,OAAO,KAAK,KAAK,MAAM;AAAA;AAAA;AAS3F,eAAe,cAAc;;;;"}