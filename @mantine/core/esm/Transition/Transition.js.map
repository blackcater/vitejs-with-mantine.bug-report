{"version":3,"file":"Transition.js","sources":["../../src/Transition/Transition.tsx"],"sourcesContent":["import React from 'react';\nimport { Transition as RTGTransition } from 'react-transition-group';\nimport { useMantineTheme, DefaultProps } from '@mantine/theme';\nimport { useReducedMotion } from '@mantine/hooks';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { MantineTransition, transitions } from './transitions';\n\nexport { GroupedTransition } from './GroupedTransition';\nexport type { GroupedTransitionProps } from './GroupedTransition';\n\nexport const AVAILABLE_TRANSITIONS = Object.keys(transitions) as Array<keyof typeof transitions>;\n\nexport type { MantineTransition };\n\nexport interface TransitionProps extends Omit<DefaultProps, 'className'> {\n  /** Predefined transition name or transition styles */\n  transition: MantineTransition;\n\n  /** Transition duration in ms */\n  duration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Render function with transition styles argument */\n  children(styles: React.CSSProperties): React.ReactNode;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function Transition({\n  transition,\n  duration = 250,\n  mounted,\n  children,\n  themeOverride,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: TransitionProps) {\n  const theme = useMantineTheme(themeOverride);\n  const reduceMotion = useReducedMotion();\n\n  return (\n    <RTGTransition\n      in={mounted}\n      timeout={duration}\n      unmountOnExit\n      mountOnEnter\n      onEnter={(node: any) => {\n        node.offsetHeight;\n        typeof onEnter === 'function' && onEnter();\n      }}\n      onExited={onExited}\n      onEntered={onEntered}\n      onExit={onExit}\n    >\n      {(transitionState) =>\n        children(\n          getTransitionStyles({\n            transition,\n            duration: reduceMotion ? 0 : duration,\n            state: transitionState,\n            timingFunction: timingFunction || theme.transitionTimingFunction,\n          })\n        )\n      }\n    </RTGTransition>\n  );\n}\n\nTransition.displayName = '@mantine/core/Transition';\n"],"names":["RTGTransition"],"mappings":";;;;;;;MAUa,wBAAwB,OAAO,KAAK;oBAiCtB;AAAA,EACzB;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACkB;AAClB,QAAM,QAAQ,gBAAgB;AAC9B,QAAM,eAAe;AAErB,6CACGA,cAAD;AAAA,IACE,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,eAAa;AAAA,IACb,cAAY;AAAA,IACZ,SAAS,CAAC,SAAc;AACtB,WAAK;AACL,aAAO,YAAY,cAAc;AAAA;AAAA,IAEnC;AAAA,IACA;AAAA,IACA;AAAA,KAEC,CAAC,oBACA,SACE,oBAAoB;AAAA,IAClB;AAAA,IACA,UAAU,eAAe,IAAI;AAAA,IAC7B,OAAO;AAAA,IACP,gBAAgB,kBAAkB,MAAM;AAAA;AAAA;AAQpD,WAAW,cAAc;;;;"}