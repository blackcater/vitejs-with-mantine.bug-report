{"version":3,"file":"Col.js","sources":["../../src/Grid/Col.tsx"],"sourcesContent":["import React from 'react';\nimport { DefaultProps, useMantineTheme, MantineNumberSize, getSizeValue } from '@mantine/theme';\n\nexport interface ColProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  span: number;\n  columns?: number;\n  offset?: number;\n  gutter?: MantineNumberSize;\n  grow?: boolean;\n}\n\nexport function isValidSpan(span: number) {\n  return typeof span === 'number' && span > 0 && span % 1 === 0;\n}\n\nexport function Col({\n  themeOverride,\n  children,\n  span,\n  gutter,\n  offset = 0,\n  grow,\n  style,\n  columns,\n  ...others\n}: ColProps) {\n  const theme = useMantineTheme(themeOverride);\n  const spacing = getSizeValue({ size: gutter, sizes: theme.spacing });\n\n  if (!isValidSpan(span) || span > columns) {\n    return null;\n  }\n\n  const styles: React.CSSProperties = {\n    ...style,\n    boxSizing: 'border-box',\n    flex: `${grow ? '1' : '0'} 0 calc(${100 / (columns / span)}% - ${spacing}px)`,\n    margin: spacing / 2,\n  };\n\n  if (isValidSpan(offset)) {\n    styles.marginLeft = `calc(${100 / (columns / offset)}% + ${spacing / 2}px)`;\n  }\n\n  return (\n    <div style={styles} {...others}>\n      {children}\n    </div>\n  );\n}\n\nCol.displayName = '@mantine/core/Col';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAW4B,MAAc;AACxC,SAAO,OAAO,SAAS,YAAY,OAAO,KAAK,OAAO,MAAM;AAAA;aAG1C,IAUP;AAVO,eAClB;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,MARkB,IASf,mBATe,IASf;AAAA,IARH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,QAAQ,gBAAgB;AAC9B,QAAM,UAAU,aAAa,CAAE,MAAM,QAAQ,OAAO,MAAM;AAE1D,MAAI,CAAC,YAAY,SAAS,OAAO,SAAS;AACxC,WAAO;AAAA;AAGT,QAAM,SAA8B,iCAC/B,QAD+B;AAAA,IAElC,WAAW;AAAA,IACX,MAAM,GAAG,OAAO,MAAM,cAAc,iBAAiB,YAAY;AAAA,IACjE,QAAQ,UAAU;AAAA;AAGpB,MAAI,YAAY,SAAS;AACvB,WAAO,aAAa,QAAQ,iBAAiB,cAAc,UAAU;AAAA;AAGvE,6CACG,OAAD;AAAA,IAAK,OAAO;AAAA,KAAY,SACrB;AAAA;AAKP,IAAI,cAAc;;;;"}