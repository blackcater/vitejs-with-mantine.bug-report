{"version":3,"file":"MenuBody.js","sources":["../../../src/Menu/MenuBody/MenuBody.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport cx from 'clsx';\nimport { useReducedMotion, useClickOutside, useFocusTrap } from '@mantine/hooks';\nimport { DefaultProps, MantineNumberSize, useMantineTheme } from '@mantine/theme';\nimport { Transition, MantineTransition } from '../../Transition/Transition';\nimport { Paper } from '../../Paper/Paper';\nimport { Divider } from '../../Divider/Divider';\nimport { MenuItem, MenuItemType } from '../MenuItem/MenuItem';\nimport { MenuButton } from '../MenuButton/MenuButton';\nimport useStyles from './MenuBody.styles';\n\ninterface MenuBodyProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  /** When true menu is mounted to the dom */\n  opened: boolean;\n\n  /** Triggers when menu is closed */\n  onClose(): void;\n\n  /** <MenuItem /> and <Divider /> components only */\n  children: React.ReactNode;\n\n  /** Transition styles */\n  transition?: MantineTransition;\n\n  /** Transitions duration in ms */\n  transitionDuration?: number;\n\n  /** Transition timing function */\n  transitionTimingFunction?: string;\n\n  /** Predefined menu width or number for width in px */\n  size?: MantineNumberSize;\n\n  /** Predefined shadow from theme or box-shadow value */\n  shadow?: string;\n\n  /** Should menu close on outside click */\n  closeOnClickOutside?: boolean;\n\n  /** Should menu close on item click */\n  closeOnItemClick?: boolean;\n\n  /** Menu body z-index */\n  zIndex?: number;\n}\n\nfunction getPreviousItem(active: number, items: MenuItemType[]) {\n  for (let i = active - 1; i >= 0; i -= 1) {\n    if (!items[i].props.disabled && items[i].type === MenuItem) {\n      return i;\n    }\n  }\n\n  return active;\n}\n\nfunction getNextItem(active: number, items: MenuItemType[]) {\n  for (let i = active + 1; i < items.length; i += 1) {\n    if (!items[i].props.disabled && items[i].type === MenuItem) {\n      return i;\n    }\n  }\n\n  return active;\n}\n\nfunction findInitialItem(items: MenuItemType[]) {\n  for (let i = 0; i < items.length; i += 1) {\n    if (!items[i].props.disabled && items[i].type === MenuItem) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction MenuBody({\n  className,\n  themeOverride,\n  opened,\n  onClose,\n  transition = 'skew-up',\n  transitionDuration = 250,\n  transitionTimingFunction,\n  style,\n  children,\n  size = 'md',\n  shadow = 'md',\n  closeOnClickOutside = true,\n  closeOnItemClick = true,\n  zIndex = 1000,\n  ...others\n}: MenuBodyProps) {\n  const items = React.Children.toArray(children).filter(\n    (item: MenuItemType) => item.type === MenuItem || item.type === Divider\n  ) as MenuItemType[];\n\n  const hoveredTimeout = useRef<number>();\n  const buttonsRefs = useRef<Record<string, HTMLButtonElement>>({});\n  const theme = useMantineTheme(themeOverride);\n  const classes = useStyles({ size, theme });\n  const reduceMotion = useReducedMotion();\n  const duration = reduceMotion ? 0 : transitionDuration;\n  const [hovered, setHovered] = useState(findInitialItem(items));\n  const focusTrapRef = useFocusTrap();\n\n  useEffect(() => {\n    if (!opened) {\n      hoveredTimeout.current = window.setTimeout(() => {\n        setHovered(findInitialItem(items));\n      }, duration);\n    } else {\n      window.clearTimeout(hoveredTimeout.current);\n    }\n  }, [opened]);\n\n  const menuRef = useClickOutside(() => closeOnClickOutside && onClose());\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const { code } = event.nativeEvent;\n\n    if (code === 'Escape') {\n      onClose();\n    }\n\n    if (code === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (code === 'ArrowUp') {\n      event.preventDefault();\n      const prevIndex = getPreviousItem(hovered, items);\n      setHovered(prevIndex);\n      buttonsRefs.current[prevIndex].focus();\n    }\n\n    if (code === 'ArrowDown') {\n      event.preventDefault();\n      const nextIndex = getNextItem(hovered, items);\n      setHovered(nextIndex);\n      buttonsRefs.current[nextIndex].focus();\n    }\n  };\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  const buttons = items.map((item, index) => {\n    if (item.type === MenuItem) {\n      return (\n        <MenuButton\n          {...item.props}\n          key={index}\n          hovered={hovered === index}\n          onHover={() => setHovered(-1)}\n          onClick={(event) => {\n            if (closeOnItemClick) {\n              onClose();\n            }\n\n            if (typeof item.props.onClick === 'function') {\n              item.props.onClick(event);\n            }\n          }}\n          elementRef={(node) => {\n            buttonsRefs.current[index] = node;\n          }}\n        />\n      );\n    }\n\n    if (item.type === Divider) {\n      return <Divider key={index} variant=\"solid\" className={classes.hr} />;\n    }\n\n    return null;\n  });\n\n  return (\n    <Transition\n      mounted={opened}\n      duration={duration}\n      transition={transition}\n      timingFunction={transitionTimingFunction}\n      themeOverride={themeOverride}\n    >\n      {(transitionStyles) => (\n        <Paper\n          shadow={shadow}\n          className={cx(classes.menu, className)}\n          style={{ ...style, ...transitionStyles, zIndex }}\n          onKeyDownCapture={handleKeyDown}\n          elementRef={menuRef}\n          role=\"menu\"\n          aria-orientation=\"vertical\"\n          {...others}\n        >\n          <div ref={focusTrapRef}>{buttons}</div>\n        </Paper>\n      )}\n    </Transition>\n  );\n}\n\nMenuBody.displayName = '@mantine/core/MenuBody';\n\nexport { MenuBody, MenuBodyProps };\n"],"names":["MenuItem","React","Divider","useRef","theme","useMantineTheme","useStyles","useReducedMotion","useState","useFocusTrap","useClickOutside","MenuButton","Transition","Paper","cx"],"mappings":"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"}