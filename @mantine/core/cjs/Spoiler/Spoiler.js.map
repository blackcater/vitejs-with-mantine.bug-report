{"version":3,"file":"Spoiler.js","sources":["../../src/Spoiler/Spoiler.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport cx from 'clsx';\nimport { DefaultProps, useMantineTheme } from '@mantine/theme';\nimport { useReducedMotion } from '@mantine/hooks';\nimport { Button } from '../Button/Button';\nimport useStyles from './Spoiler.styles';\n\nexport interface SpoilerProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  /** Max height of visible content, when this point is reached spoiler appears */\n  maxHeight: number;\n\n  /** Label for close spoiler action */\n  hideLabel: React.ReactNode;\n\n  /** Label for open spoiler action */\n  showLabel: React.ReactNode;\n\n  /** Get ref of spoiler toggle button */\n  controlRef?: React.ForwardedRef<HTMLButtonElement>;\n\n  /** Spoiler reveal transition duration in ms, 0 or null to turn off animation */\n  transitionDuration?: number;\n}\n\nexport function Spoiler({\n  className,\n  children,\n  maxHeight = 100,\n  hideLabel,\n  showLabel,\n  themeOverride,\n  transitionDuration = 200,\n  controlRef,\n  ...others\n}: SpoilerProps) {\n  const classes = useStyles({\n    transitionDuration: !useReducedMotion() && transitionDuration,\n    theme: useMantineTheme(themeOverride),\n  });\n  const [show, setShowState] = useState(false);\n  const [spoiler, setSpoilerState] = useState(false);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n\n  useEffect(() => {\n    setSpoilerState(maxHeight < contentRef.current.clientHeight);\n  }, [maxHeight, children]);\n\n  return (\n    <div className={cx(classes.spoiler, className)} {...others}>\n      <div\n        className={classes.content}\n        style={{\n          maxHeight: !show ? maxHeight : contentRef.current && contentRef.current.clientHeight,\n        }}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n\n      {spoiler && (\n        <Button\n          variant=\"link\"\n          elementRef={controlRef}\n          onClick={() => setShowState((opened) => !opened)}\n          themeOverride={themeOverride}\n        >\n          {spoilerMoreContent}\n        </Button>\n      )}\n    </div>\n  );\n}\n\nSpoiler.displayName = '@mantine/core/Spoiler';\n"],"names":["useStyles","useReducedMotion","useMantineTheme","useState","useRef","cx","Button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAwBwB,IAUP;AAVO,eACtB;AAAA;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA,qBAAqB;AAAA,IACrB;AAAA,MARsB,IASnB,mBATmB,IASnB;AAAA,IARH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,UAAUA,0BAAU;AAAA,IACxB,oBAAoB,CAACC,4BAAsB;AAAA,IAC3C,OAAOC,sBAAgB;AAAA;AAEzB,QAAM,CAAC,MAAM,gBAAgBC,eAAS;AACtC,QAAM,CAAC,SAAS,mBAAmBA,eAAS;AAC5C,QAAM,aAAaC,aAAuB;AAE1C,QAAM,qBAAqB,OAAO,YAAY;AAE9C,kBAAU,MAAM;AACd,oBAAgB,YAAY,WAAW,QAAQ;AAAA,KAC9C,CAAC,WAAW;AAEf,iEACG,OAAD;AAAA,IAAK,WAAWC,uBAAG,QAAQ,SAAS;AAAA,KAAgB,iEACjD,OAAD;AAAA,IACE,WAAW,QAAQ;AAAA,IACnB,OAAO;AAAA,MACL,WAAW,CAAC,OAAO,YAAY,WAAW,WAAW,WAAW,QAAQ;AAAA;AAAA,6DAGzE,OAAD;AAAA,IAAK,KAAK;AAAA,KAAa,YAGxB,mEACEC,eAAD;AAAA,IACE,SAAQ;AAAA,IACR,YAAY;AAAA,IACZ,SAAS,MAAM,aAAa,CAAC,WAAW,CAAC;AAAA,IACzC;AAAA,KAEC;AAAA;AAOX,QAAQ,cAAc;;;;"}