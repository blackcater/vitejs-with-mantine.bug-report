{"version":3,"file":"NumberInput.js","sources":["../../src/NumberInput/NumberInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/theme';\nimport { TextInput } from '../TextInput/TextInput';\nimport useStyles, { CONTROL_WIDTH } from './NumberInput.styles';\n\nexport interface NumberInputProps\n  extends Omit<\n    React.ComponentPropsWithoutRef<typeof TextInput>,\n    'rightSection' | 'rightSectionProps' | 'rightSectionWidth' | 'onChange' | 'value'\n  > {\n  /** onChange input handler for controlled variant, note that input event is not exposed */\n  onChange?(value: number): void;\n\n  /** Input value for controlled variant */\n  value?: number;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** Number by which value will be incremented/decremented with controls and up/down arrows */\n  step?: number;\n\n  /** Removes increment/decrement controls */\n  hideControls?: boolean;\n\n  /** Amount of digits after the decimal point  */\n  precision?: number;\n\n  /** Default value for uncontrolled variant only */\n  defaultValue?: number;\n\n  /** Prevent value clamp on blur */\n  noClampOnBlur?: boolean;\n}\n\nexport function NumberInput({\n  disabled,\n  themeOverride,\n  elementRef,\n  value,\n  onChange,\n  min,\n  max,\n  step = 1,\n  onBlur,\n  onFocus,\n  hideControls = false,\n  radius = 'sm',\n  variant,\n  precision = 0,\n  defaultValue,\n  noClampOnBlur = false,\n  ...others\n}: NumberInputProps) {\n  const theme = useMantineTheme(themeOverride);\n  const classes = useStyles({ theme, radius });\n  const [focused, setFocused] = useState(false);\n  const [_value, setValue] = useState(\n    typeof value === 'number' ? value : typeof defaultValue === 'number' ? defaultValue : 0\n  );\n  const finalValue = typeof value === 'number' ? value : _value;\n  const [tempValue, setTempValue] = useState(\n    typeof finalValue === 'number' ? finalValue.toFixed(precision) : ''\n  );\n  const inputRef = useRef<HTMLInputElement>();\n  const handleValueChange = (val: number) => {\n    // console.log(val);\n    typeof onChange === 'function' && onChange(val);\n    setValue(val);\n  };\n\n  const _min = typeof min === 'number' ? min : -Infinity;\n  const _max = typeof max === 'number' ? max : Infinity;\n  const clamp = (v: string | number) => {\n    const val = typeof v === 'number' ? v : parseFloat(v);\n    return Math.min(Math.max(val, _min), _max);\n  };\n\n  useEffect(() => {\n    if (typeof value === 'number' && !focused) {\n      setValue(value);\n      setTempValue(value.toFixed(precision));\n    }\n  }, [value]);\n\n  const rightSection = (\n    <div className={classes.rightSection}>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        data-mantine-increment\n        onMouseDown={(event) => {\n          event.preventDefault();\n          const result = clamp(finalValue + step).toFixed(precision);\n          handleValueChange(parseFloat(result));\n          setTempValue(result);\n          inputRef.current.focus();\n        }}\n        disabled={finalValue >= max}\n        className={cx(classes.control, classes.controlUp)}\n      />\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        data-mantine-decrement\n        onMouseDown={(event) => {\n          event.preventDefault();\n          const result = clamp(finalValue - step).toFixed(precision);\n          handleValueChange(parseFloat(result));\n          setTempValue(result);\n          inputRef.current.focus();\n        }}\n        disabled={finalValue <= min}\n        className={cx(classes.control, classes.controlDown)}\n      />\n    </div>\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    setTempValue(val);\n\n    const parsed = Number(val);\n    val.trim() !== '' && !Number.isNaN(parsed) && handleValueChange(parsed);\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const val = clamp(event.currentTarget.value);\n\n    if (!Number.isNaN(val)) {\n      if (!noClampOnBlur) {\n        setTempValue(val.toFixed(precision));\n        handleValueChange(val);\n      }\n    } else {\n      setTempValue(finalValue.toFixed(precision));\n    }\n\n    setFocused(false);\n    typeof onBlur === 'function' && onBlur(event);\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    setFocused(true);\n    typeof onFocus === 'function' && onBlur(event);\n  };\n\n  return (\n    <TextInput\n      {...others}\n      variant={variant}\n      value={tempValue}\n      disabled={disabled}\n      themeOverride={themeOverride}\n      elementRef={useMergedRef(inputRef, elementRef)}\n      type=\"number\"\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      rightSection={disabled || hideControls || variant === 'unstyled' ? null : rightSection}\n      rightSectionWidth={CONTROL_WIDTH + 1}\n      radius={radius}\n      max={max}\n      min={min}\n      step={step}\n    />\n  );\n}\n\nNumberInput.displayName = '@mantine/core/NumberInput';\n"],"names":["theme","useMantineTheme","useStyles","useState","useRef","cx","TextInput","useMergedRef","CONTROL_WIDTH"],"mappings":"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"}