{"version":3,"file":"Switch.js","sources":["../../src/Switch/Switch.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useId, useReducedMotion } from '@mantine/hooks';\nimport { DefaultProps, MantineNumberSize, MantineSize, useMantineTheme } from '@mantine/theme';\nimport useStyles, { sizes } from './Switch.styles';\n\nexport const SWITCH_SIZES = sizes;\n\nexport interface SwitchProps\n  extends DefaultProps,\n    Omit<React.ComponentPropsWithoutRef<'input'>, 'type' | 'size'> {\n  /** Id is used to bind input and label, if not passed unique id will be generated for each input */\n  id?: string;\n\n  /** Switch label */\n  label?: React.ReactNode;\n\n  /** Switch checked state color from theme, defaults to theme.primaryColor */\n  color?: string;\n\n  /** Predefined size value */\n  size?: MantineSize;\n\n  /** Predefined border-radius value from theme.radius or number for border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Style properties added to input element */\n  inputStyle?: React.CSSProperties;\n\n  /** Class name added to input element */\n  inputClassName?: string;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n\n  /** Get element ref */\n  elementRef?: React.ForwardedRef<HTMLInputElement>;\n}\n\nexport function Switch({\n  className,\n  color,\n  label,\n  id,\n  style,\n  size = 'md',\n  radius = 'xl',\n  themeOverride,\n  wrapperProps,\n  inputStyle,\n  inputClassName,\n  elementRef,\n  ...others\n}: SwitchProps) {\n  const classes = useStyles({\n    size,\n    color,\n    radius,\n    reduceMotion: useReducedMotion(),\n    theme: useMantineTheme(themeOverride),\n  });\n\n  const uuid = useId(id);\n\n  return (\n    <div className={cx(classes.wrapper, className)} style={style} {...wrapperProps}>\n      <input\n        id={uuid}\n        ref={elementRef}\n        type=\"checkbox\"\n        className={cx(classes.switch, inputClassName)}\n        style={inputStyle}\n        {...others}\n      />\n\n      {label && (\n        <label className={classes.label} htmlFor={uuid}>\n          {label}\n        </label>\n      )}\n    </div>\n  );\n}\n\nSwitch.displayName = '@mantine/core/Switch';\n"],"names":["sizes","useStyles","useReducedMotion","useMantineTheme","useId","cx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMa,eAAeA;gBAiCL,IAcP;AAdO,eACrB;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MAZqB,IAalB,mBAbkB,IAalB;AAAA,IAZH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,UAAUC,yBAAU;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAcC;AAAA,IACd,OAAOC,sBAAgB;AAAA;AAGzB,QAAM,OAAOC,YAAM;AAEnB,iEACG,OAAD;AAAA,IAAK,WAAWC,uBAAG,QAAQ,SAAS;AAAA,IAAY;AAAA,KAAkB,uEAC/D,SAAD;AAAA,IACE,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,MAAK;AAAA,IACL,WAAWA,uBAAG,QAAQ,QAAQ;AAAA,IAC9B,OAAO;AAAA,KACH,UAGL,iEACE,SAAD;AAAA,IAAO,WAAW,QAAQ;AAAA,IAAO,SAAS;AAAA,KACvC;AAAA;AAOX,OAAO,cAAc;;;;;"}