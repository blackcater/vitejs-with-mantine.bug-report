{"version":3,"file":"Badge.styles.js","sources":["../../src/Badge/Badge.styles.ts"],"sourcesContent":["import {\n  createMemoStyles,\n  MantineTheme,\n  MantineSize,\n  MantineNumberSize,\n  getFontStyles,\n  getThemeColor,\n  getFocusStyles,\n  getSizeValue,\n  hexToRgba,\n} from '@mantine/theme';\n\ninterface BadgeStylesProps {\n  color: string;\n  theme: MantineTheme;\n  size: MantineSize;\n  radius: MantineNumberSize;\n  fullWidth: boolean;\n}\n\nconst sizes = {\n  xs: {\n    fontSize: 9,\n    height: 16,\n  },\n  sm: {\n    fontSize: 10,\n    height: 18,\n  },\n  md: {\n    fontSize: 11,\n    height: 20,\n  },\n  lg: {\n    fontSize: 13,\n    height: 26,\n  },\n  xl: {\n    fontSize: 16,\n    height: 32,\n  },\n} as const;\n\nexport const heights = Object.keys(sizes).reduce((acc, key) => {\n  acc[key] = sizes[key].height;\n  return acc;\n}, {} as Record<MantineSize, number>);\n\nexport default createMemoStyles({\n  leftSection: ({ theme }: BadgeStylesProps) => ({\n    marginRight: theme.spacing.xs / 2,\n  }),\n\n  rightSection: ({ theme }: BadgeStylesProps) => ({\n    marginLeft: theme.spacing.xs / 2,\n  }),\n\n  inner: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n\n  badge: ({ theme, size, fullWidth, radius }: BadgeStylesProps) => {\n    const { fontSize, height } = size in sizes ? sizes[size] : sizes.md;\n    return {\n      ...getFocusStyles(theme),\n      ...getFontStyles(theme),\n      fontSize,\n      height,\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: `${height - 2}px`,\n      border: '1px solid transparent',\n      textDecoration: 'none',\n      padding: [0, getSizeValue({ size, sizes: theme.spacing }) / 1.5],\n      boxSizing: 'border-box',\n      display: fullWidth ? 'flex' : 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: fullWidth ? '100%' : 'auto',\n      textTransform: 'uppercase',\n      borderRadius: getSizeValue({ size: radius, sizes: theme.radius }),\n      fontWeight: 700,\n      letterSpacing: 0.25,\n      cursor: 'default',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    };\n  },\n\n  light: ({ theme, color }: BadgeStylesProps) => ({\n    backgroundColor: hexToRgba(\n      getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 9 : 0 }),\n      theme.colorScheme === 'dark' ? 0.3 : 1\n    ),\n    color: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 9 }),\n  }),\n\n  filled: ({ theme, color }: BadgeStylesProps) => ({\n    backgroundColor: hexToRgba(\n      getThemeColor({ theme, color, shade: 7 }),\n      theme.colorScheme === 'dark' ? 0.65 : 1\n    ),\n    color: theme.white,\n    textShadow:\n      theme.colorScheme === 'dark'\n        ? 'none'\n        : `1px 1px 0 ${getThemeColor({ theme, color, shade: 9 })}`,\n  }),\n\n  outline: ({ theme, color }: BadgeStylesProps) => ({\n    backgroundColor: 'transparent',\n    color: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 8 }),\n    borderColor: hexToRgba(\n      getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 8 }),\n      0.55\n    ),\n  }),\n});\n"],"names":["createMemoStyles","theme","getFocusStyles","getFontStyles","getSizeValue","hexToRgba","getThemeColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAM,QAAQ;AAAA,EACZ,IAAI;AAAA,IACF,UAAU;AAAA,IACV,QAAQ;AAAA;AAAA,EAEV,IAAI;AAAA,IACF,UAAU;AAAA,IACV,QAAQ;AAAA;AAAA,EAEV,IAAI;AAAA,IACF,UAAU;AAAA,IACV,QAAQ;AAAA;AAAA,EAEV,IAAI;AAAA,IACF,UAAU;AAAA,IACV,QAAQ;AAAA;AAAA,EAEV,IAAI;AAAA,IACF,UAAU;AAAA,IACV,QAAQ;AAAA;AAAA;MAIC,UAAU,OAAO,KAAK,OAAO,OAAO,CAAC,KAAK,QAAQ;AAC7D,MAAI,OAAO,MAAM,KAAK;AACtB,SAAO;AAAA,GACN;AAEH,gBAAeA,uBAAiB;AAAA,EAC9B,aAAa,CAAC,CAAE;AAA+B,IAC7C,aAAa,MAAM,QAAQ,KAAK;AAAA;AAAA,EAGlC,cAAc,CAAC,CAAE;AAA+B,IAC9C,YAAY,MAAM,QAAQ,KAAK;AAAA;AAAA,EAGjC,OAAO;AAAA,IACL,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,cAAc;AAAA;AAAA,EAGhB,OAAO,CAAC,QAAEC,SAAO,MAAM,WAAW,YAA+B;AAC/D,UAAM,CAAE,UAAU,UAAW,QAAQ,QAAQ,MAAM,QAAQ,MAAM;AACjE,WAAO,gDACFC,qBAAeD,WACfE,oBAAcF,WAFZ;AAAA,MAGL;AAAA,MACA;AAAA,MACA,yBAAyB;AAAA,MACzB,YAAY,GAAG,SAAS;AAAA,MACxB,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,SAAS,CAAC,GAAGG,mBAAa,CAAE,MAAM,OAAOH,QAAM,YAAa;AAAA,MAC5D,WAAW;AAAA,MACX,SAAS,YAAY,SAAS;AAAA,MAC9B,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,OAAO,YAAY,SAAS;AAAA,MAC5B,eAAe;AAAA,MACf,cAAcG,mBAAa,CAAE,MAAM,QAAQ,OAAOH,QAAM;AAAA,MACxD,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,UAAU;AAAA;AAAA;AAAA,EAId,OAAO,CAAC,QAAEA,SAAO;AAA+B,IAC9C,iBAAiBI,gBACfC,oBAAc,QAAEL,SAAO,OAAO,OAAOA,QAAM,gBAAgB,SAAS,IAAI,KACxEA,QAAM,gBAAgB,SAAS,MAAM;AAAA,IAEvC,OAAOK,oBAAc,QAAEL,SAAO,OAAO,OAAOA,QAAM,gBAAgB,SAAS,IAAI;AAAA;AAAA,EAGjF,QAAQ,CAAC,QAAEA,SAAO;AAA+B,IAC/C,iBAAiBI,gBACfC,oBAAc,QAAEL,SAAO,OAAO,OAAO,KACrCA,QAAM,gBAAgB,SAAS,OAAO;AAAA,IAExC,OAAOA,QAAM;AAAA,IACb,YACEA,QAAM,gBAAgB,SAClB,SACA,aAAaK,oBAAc,QAAEL,SAAO,OAAO,OAAO;AAAA;AAAA,EAG1D,SAAS,CAAC,QAAEA,SAAO;AAA+B,IAChD,iBAAiB;AAAA,IACjB,OAAOK,oBAAc,QAAEL,SAAO,OAAO,OAAOA,QAAM,gBAAgB,SAAS,IAAI;AAAA,IAC/E,aAAaI,gBACXC,oBAAc,QAAEL,SAAO,OAAO,OAAOA,QAAM,gBAAgB,SAAS,IAAI,KACxE;AAAA;AAAA;;;;;"}