{"version":3,"file":"Burger.js","sources":["../../src/Burger/Burger.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { useReducedMotion } from '@mantine/hooks';\nimport { DefaultProps, MantineNumberSize, useMantineTheme } from '@mantine/theme';\nimport useStyles, { sizes } from './Burger.styles';\n\nexport const BURGER_SIZES = sizes;\n\nexport interface BurgerProps extends DefaultProps, React.ComponentPropsWithoutRef<'button'> {\n  /** Burger state: true for cross, false for burger */\n  opened: boolean;\n\n  /** Burger color from theme */\n  color?: string;\n\n  /** Predefined burger size or number to set width and height in px */\n  size?: MantineNumberSize;\n\n  /** Get element ref */\n  elementRef?: React.ForwardedRef<HTMLButtonElement>;\n}\n\nexport function Burger({\n  className,\n  opened,\n  color = 'gray',\n  size = 'md',\n  themeOverride,\n  elementRef,\n  ...others\n}: BurgerProps) {\n  const classes = useStyles({\n    color,\n    size,\n    theme: useMantineTheme(themeOverride),\n    reduceMotion: useReducedMotion(),\n  });\n\n  return (\n    <button type=\"button\" className={cx(classes.wrapper, className)} ref={elementRef} {...others}>\n      <div className={cx(classes.burger, { [classes.opened]: opened })} />\n    </button>\n  );\n}\n\nBurger.displayName = '@mantine/core/Burger';\n"],"names":["sizes","useStyles","useMantineTheme","useReducedMotion","cx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMa,eAAeA;gBAgBL,IAQP;AARO,eACrB;AAAA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,OAAO;AAAA,IACP;AAAA,IACA;AAAA,MANqB,IAOlB,mBAPkB,IAOlB;AAAA,IANH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAM,UAAUC,yBAAU;AAAA,IACxB;AAAA,IACA;AAAA,IACA,OAAOC,sBAAgB;AAAA,IACvB,cAAcC;AAAA;AAGhB,iEACG,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAWC,uBAAG,QAAQ,SAAS;AAAA,IAAY,KAAK;AAAA,KAAgB,iEACnF,OAAD;AAAA,IAAK,WAAWA,uBAAG,QAAQ,QAAQ,EAAG,QAAQ,SAAS;AAAA;AAAA;AAK7D,OAAO,cAAc;;;;;"}