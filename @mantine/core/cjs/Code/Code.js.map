{"version":3,"file":"Code.js","sources":["../../src/Code/Code.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { DefaultProps, useMantineTheme } from '@mantine/theme';\nimport useStyles from './Code.styles';\n\nexport interface CodeProps extends DefaultProps, React.ComponentPropsWithoutRef<'code'> {\n  /** Code content */\n  children: React.ReactNode;\n\n  /** Code color and background from theme, defaults to gray in light theme and to dark in dark theme */\n  color?: string;\n\n  /** True for code block, false for inline code */\n  block?: boolean;\n}\n\nexport function Code({\n  children,\n  themeOverride,\n  block = false,\n  className,\n  color,\n  ...others\n}: CodeProps) {\n  const theme = useMantineTheme(themeOverride);\n  const themeColor = color || (theme.colorScheme === 'dark' ? 'dark' : 'gray');\n  const classes = useStyles({ color: themeColor, theme: useMantineTheme(themeOverride) });\n\n  if (block) {\n    return (\n      <pre className={cx(classes.code, classes.pre, className)} {...others}>\n        {children}\n      </pre>\n    );\n  }\n\n  return (\n    <code className={cx(classes.code, className)} {...others}>\n      {children}\n    </code>\n  );\n}\n\nCode.displayName = '@mantine/core/Code';\n"],"names":["theme","useMantineTheme","useStyles","cx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAgBqB,IAOP;AAPO,eACnB;AAAA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,MALmB,IAMhB,mBANgB,IAMhB;AAAA,IALH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGA,QAAMA,UAAQC,sBAAgB;AAC9B,QAAM,aAAa,kBAAgB,gBAAgB,SAAS,SAAS;AACrE,QAAM,UAAUC,uBAAU,CAAE,OAAO,YAAY,OAAOD,sBAAgB;AAEtE,MAAI,OAAO;AACT,wDACG,OAAD;AAAA,MAAK,WAAWE,YAAG,QAAQ,MAAM,QAAQ,KAAK;AAAA,OAAgB,SAC3D;AAAA;AAKP,sDACG,QAAD;AAAA,IAAM,WAAWA,YAAG,QAAQ,MAAM;AAAA,KAAgB,SAC/C;AAAA;AAKP,KAAK,cAAc;;;;"}