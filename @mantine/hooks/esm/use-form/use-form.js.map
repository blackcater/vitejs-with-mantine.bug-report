{"version":3,"file":"use-form.js","sources":["../../src/use-form/use-form.ts"],"sourcesContent":["import React, { useState } from 'react';\n\nexport type ValidationRule<T> = {\n  readonly [P in keyof T]?: (value: T[P]) => boolean;\n};\n\nexport interface UseForm<T> {\n  validationRules?: ValidationRule<T>;\n  initialValues: T;\n}\n\nexport function useForm<T extends { [key: string]: any }>({\n  initialValues,\n  validationRules = {},\n}: UseForm<T>) {\n  type ValidationErrors = Record<keyof T, boolean>;\n\n  const initialErrors = Object.keys(initialValues).reduce((acc, field) => {\n    acc[field as keyof T] = false;\n    return acc;\n  }, {} as ValidationErrors);\n\n  const [errors, setErrors] = useState(initialErrors);\n  const [values, setValues] = useState(initialValues);\n\n  const resetErrors = () => setErrors(initialErrors);\n\n  const reset = () => {\n    setValues(initialValues);\n    resetErrors();\n  };\n\n  const validate = () => {\n    let isValid = true;\n\n    const validationErrors = Object.keys(values).reduce((acc, field) => {\n      if (\n        validationRules &&\n        typeof validationRules[field] === 'function' &&\n        !validationRules[field](values[field])\n      ) {\n        acc[field as keyof T] = true;\n        isValid = false;\n      } else {\n        acc[field as keyof T] = false;\n      }\n\n      return acc;\n    }, {} as ValidationErrors);\n\n    setErrors(validationErrors);\n    return isValid;\n  };\n\n  const validateField = (field: keyof T) =>\n    setErrors((currentErrors) => ({\n      ...currentErrors,\n      [field]:\n        typeof validationRules[field] === 'function'\n          ? !validationRules[field](values[field])\n          : false,\n    }));\n\n  const setFieldError = (field: keyof T, error: boolean) =>\n    setErrors((currentErrors) => ({ ...currentErrors, [field]: error }));\n\n  const setFieldValue = <K extends keyof T, U extends T[K]>(field: K, value: U) => {\n    setValues((currentValues) => ({ ...currentValues, [field]: value }));\n    setFieldError(field, false);\n  };\n\n  const onSubmit = (handleSubmit: (values: T) => any) => (event?: React.FormEvent) => {\n    event && event.preventDefault();\n    validate() && handleSubmit(values);\n  };\n\n  return {\n    values,\n    errors,\n    validate,\n    reset,\n    setErrors,\n    setValues,\n    setFieldValue,\n    setFieldError,\n    validateField,\n    resetErrors,\n    onSubmit,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;iBAW0D;AAAA,EACxD;AAAA,EACA,kBAAkB;AAAA,GACL;AAGb,QAAM,gBAAgB,OAAO,KAAK,eAAe,OAAO,CAAC,KAAK,UAAU;AACtE,QAAI,SAAoB;AACxB,WAAO;AAAA,KACN;AAEH,QAAM,CAAC,QAAQ,aAAa,SAAS;AACrC,QAAM,CAAC,QAAQ,aAAa,SAAS;AAErC,QAAM,cAAc,MAAM,UAAU;AAEpC,QAAM,QAAQ,MAAM;AAClB,cAAU;AACV;AAAA;AAGF,QAAM,WAAW,MAAM;AACrB,QAAI,UAAU;AAEd,UAAM,mBAAmB,OAAO,KAAK,QAAQ,OAAO,CAAC,KAAK,UAAU;AAClE,UACE,mBACA,OAAO,gBAAgB,WAAW,cAClC,CAAC,gBAAgB,OAAO,OAAO,SAC/B;AACA,YAAI,SAAoB;AACxB,kBAAU;AAAA,aACL;AACL,YAAI,SAAoB;AAAA;AAG1B,aAAO;AAAA,OACN;AAEH,cAAU;AACV,WAAO;AAAA;AAGT,QAAM,gBAAgB,CAAC,UACrB,UAAU,CAAC,kBAAmB,iCACzB,gBADyB;AAAA,KAE3B,QACC,OAAO,gBAAgB,WAAW,aAC9B,CAAC,gBAAgB,OAAO,OAAO,UAC/B;AAAA;AAGV,QAAM,gBAAgB,CAAC,OAAgB,UACrC,UAAU,CAAC,kBAAmB,iCAAK,gBAAL,EAAqB,QAAQ;AAE7D,QAAM,gBAAgB,CAAoC,OAAU,UAAa;AAC/E,cAAU,CAAC,kBAAmB,iCAAK,gBAAL,EAAqB,QAAQ;AAC3D,kBAAc,OAAO;AAAA;AAGvB,QAAM,WAAW,CAAC,iBAAqC,CAAC,UAA4B;AAClF,aAAS,MAAM;AACf,kBAAc,aAAa;AAAA;AAG7B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;;;;"}