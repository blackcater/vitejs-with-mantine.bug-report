{"version":3,"file":"index.umd.js","sources":["../src/TagItem/MenuIcon.tsx","../src/TagEdit/CheckIcon.tsx","../src/TagEdit/TagEdit.styles.ts","../src/TagEdit/TagEdit.tsx","../src/TagItem/TagItem.styles.ts","../src/TagItem/TagItem.tsx","../src/TagsList/TagsList.styles.ts","../src/TagsList/TagsList.tsx","../src/TagPicker/TagPicker.styles.ts","../src/TagPicker/TagPicker.tsx","../src/TagPickerContainer.tsx"],"sourcesContent":["import React from 'react';\n\nexport function MenuIcon(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M3.625 7.5C3.625 8.12132 3.12132 8.625 2.5 8.625C1.87868 8.625 1.375 8.12132 1.375 7.5C1.375 6.87868 1.87868 6.375 2.5 6.375C3.12132 6.375 3.625 6.87868 3.625 7.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM12.5 8.625C13.1213 8.625 13.625 8.12132 13.625 7.5C13.625 6.87868 13.1213 6.375 12.5 6.375C11.8787 6.375 11.375 6.87868 11.375 7.5C11.375 8.12132 11.8787 8.625 12.5 8.625Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function CheckIcon(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport { MantineTheme, getFontStyles, getFocusStyles } from '@mantine/core';\n\nexport default createUseStyles(\n  {\n    tagEdit: ({ theme }: { theme: MantineTheme }) => ({\n      border: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]\n      }`,\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n      paddingTop: 10,\n      paddingBottom: 10,\n      position: 'absolute',\n      top: 0,\n      width: 240,\n      left: 240,\n      zIndex: 5,\n    }),\n\n    header: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingLeft: 10,\n      paddingRight: 10,\n    },\n\n    input: {\n      flex: 1,\n      marginRight: 10,\n    },\n\n    deleteControl: ({ theme }: { theme: MantineTheme }) => ({\n      ...getFontStyles(theme),\n      ...getFocusStyles(theme),\n      fontSize: theme.fontSizes.sm,\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n      border: 0,\n      width: '100%',\n      backgroundColor: 'transparent',\n      textAlign: 'left',\n      height: 32,\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 10,\n      paddingRight: 10,\n      cursor: 'pointer',\n      marginTop: 10,\n\n      '&:hover, &:focus': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.red[9] : theme.colors.red[0],\n        color: theme.colorScheme === 'dark' ? theme.colors.red[0] : theme.colors.red[7],\n      },\n    }),\n\n    deleteIcon: {\n      marginRight: 10,\n    },\n\n    colorsList: ({ theme }: { theme: MantineTheme }) => ({\n      marginTop: 5,\n      borderTop: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]\n      }`,\n      paddingTop: 10,\n    }),\n\n    colorControl: ({ theme }: { theme: MantineTheme }) => ({\n      ...getFontStyles(theme),\n      ...getFocusStyles(theme),\n      fontSize: theme.fontSizes.sm,\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n      textTransform: 'capitalize',\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      backgroundColor: 'transparent',\n      border: '1px dotted transparent',\n      paddingLeft: 10,\n      paddingRight: 10,\n      height: 28,\n      cursor: 'pointer',\n      outline: 0,\n\n      '&:hover': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n      },\n    }),\n\n    colorLabel: {\n      marginLeft: 10,\n    },\n\n    colorControlBody: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1,\n    },\n  },\n  { link: true }\n);\n","import React, { useEffect, useState } from 'react';\nimport { useClickOutside, useFocusTrap } from '@mantine/hooks';\nimport {\n  Paper,\n  TextInput,\n  ActionIcon,\n  ColorSwatch,\n  useMantineTheme,\n  MantineThemeOverride,\n} from '@mantine/core';\nimport { CheckIcon } from './CheckIcon';\nimport { TagPickerColor, TagPickerTag } from '../types';\nimport useStyles from './TagEdit.styles';\n\nexport interface TagEditProps {\n  style?: React.CSSProperties;\n  initialValues: TagPickerTag;\n  colors: TagPickerColor[];\n  deleteLabel: string;\n  tagNameEditLabel?: string;\n  saveLabel: string;\n  onTagUpdate(id: string, values: Omit<TagPickerTag, 'id'>): void;\n  onTagDelete(id: string): void;\n  onClose(): void;\n  id: string;\n  themeOverride?: MantineThemeOverride;\n  enableDelete?: boolean;\n  enableColorChange?: boolean;\n}\n\nexport function TagEdit({\n  style,\n  onClose,\n  initialValues,\n  deleteLabel,\n  colors,\n  onTagUpdate,\n  onTagDelete,\n  id,\n  saveLabel,\n  tagNameEditLabel,\n  themeOverride,\n  enableDelete,\n  enableColorChange,\n}: TagEditProps) {\n  const theme = useMantineTheme(themeOverride);\n  const classes = useStyles({ theme });\n  const dropdownRef = useClickOutside(onClose);\n  const focusTrapRef = useFocusTrap();\n  const [values, setValues] = useState<Omit<TagPickerTag, 'id'>>({ name: '', color: '' });\n  const handleNameChange = (value: string) => setValues((current) => ({ ...current, name: value }));\n  const handleColorChange = (value: string) =>\n    setValues((current) => ({ ...current, color: value }));\n\n  const handleSubmit = () => {\n    onTagUpdate(id, { name: values.name, color: values.color });\n    onClose();\n  };\n\n  const handleDelete = () => {\n    onTagDelete(id);\n    onClose();\n  };\n\n  const handleKeyDownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.nativeEvent.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    setValues(initialValues);\n  }, [initialValues]);\n\n  const colorsList = colors.map((color) => (\n    <button\n      data-mantine-tag-color\n      className={classes.colorControl}\n      type=\"button\"\n      key={color.color}\n      onClick={() => handleColorChange(color.color)}\n    >\n      <div className={classes.colorControlBody}>\n        <ColorSwatch color={theme.colors[color.color][5]} size={18} themeOverride={themeOverride} />\n        <span data-mantine-tag-color-label className={classes.colorLabel}>\n          {color.name}\n        </span>\n      </div>\n      {color.color === values.color && <CheckIcon style={{ width: 14, height: 14 }} />}\n    </button>\n  ));\n\n  return (\n    <Paper\n      shadow=\"sm\"\n      className={classes.tagEdit}\n      elementRef={dropdownRef}\n      onKeyDownCapture={handleKeyDownCapture}\n      style={style}\n      themeOverride={themeOverride}\n    >\n      <div ref={focusTrapRef}>\n        <div className={classes.header}>\n          <TextInput\n            data-mantine-tag-input\n            className={classes.input}\n            value={values.name}\n            onChange={(event) => handleNameChange(event.currentTarget.value)}\n            onKeyDown={(event) => event.nativeEvent.code === 'Enter' && handleSubmit()}\n            autoFocus\n            aria-label={tagNameEditLabel}\n            themeOverride={themeOverride}\n          />\n\n          <ActionIcon\n            data-mantine-tag-save\n            size={36}\n            variant={theme.colorScheme === 'dark' ? 'transparent' : 'light'}\n            onClick={handleSubmit}\n            themeOverride={themeOverride}\n            aria-label={saveLabel}\n          >\n            <CheckIcon style={{ width: 16, height: 16 }} />\n          </ActionIcon>\n        </div>\n\n        {enableDelete && (\n          <button\n            data-mantine-tag-delete\n            className={classes.deleteControl}\n            type=\"button\"\n            onClick={handleDelete}\n          >\n            {deleteLabel}\n          </button>\n        )}\n\n        {enableColorChange && (\n          <div data-mantine-tag-colors className={classes.colorsList}>\n            {colorsList}\n          </div>\n        )}\n      </div>\n    </Paper>\n  );\n}\n\nTagEdit.displayName = '@mantine/tag-picker/TagEdit';\n","import { createUseStyles } from 'react-jss';\nimport { MantineTheme, getFocusStyles } from '@mantine/core';\n\nexport default createUseStyles(\n  {\n    item: {\n      position: 'relative',\n    },\n\n    body: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      paddingRight: 10,\n    },\n\n    control: ({ theme }: { theme: MantineTheme }) => ({\n      ...getFocusStyles(theme),\n      height: 32,\n      flex: 1,\n      textAlign: 'left',\n      padding: 0,\n      backgroundColor: 'transparent',\n      border: '1px solid transparent',\n      cursor: 'pointer',\n      paddingLeft: 10,\n      maxWidth: 'calc(100% - 34px)',\n    }),\n\n    controlInner: {\n      display: 'flex',\n    },\n\n    badge: {\n      display: 'block !important',\n      width: 'auto',\n    },\n\n    hovered: ({ theme }: { theme: MantineTheme }) => ({\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n    }),\n  },\n  { link: true }\n);\n","import React, { useState, useRef } from 'react';\nimport cx from 'clsx';\nimport {\n  ActionIcon,\n  Transition,\n  Badge,\n  useMantineTheme,\n  MantineThemeOverride,\n  MantineTransition,\n} from '@mantine/core';\nimport { useReducedMotion } from '@mantine/hooks';\nimport { TagPickerColor, TagPickerTag } from '../types';\nimport { MenuIcon } from './MenuIcon';\nimport { TagEdit } from '../TagEdit/TagEdit';\nimport useStyles from './TagItem.styles';\n\nexport interface TagItemProps {\n  index: number;\n  hovered: number;\n  data: TagPickerTag;\n  selected?: TagPickerTag;\n  colors: TagPickerColor[];\n  deleteLabel: string;\n  tagNameEditLabel?: string;\n  saveLabel: string;\n  editTagLabel: string;\n  onSelect(value: TagPickerTag): void;\n  onTagUpdate(id: string, values: Omit<TagPickerTag, 'id'>): void;\n  onTagDelete(id: string): void;\n  onHover(index: number): void;\n  onEventsCaptureChange(shouldCaptureEvents: boolean): void;\n  themeOverride?: MantineThemeOverride;\n  enableUpdate?: boolean;\n  enableDelete?: boolean;\n  enableColorChange?: boolean;\n  transitionDuration?: number;\n  transition?: MantineTransition;\n  transitionTimingFunction: string;\n}\n\nexport function TagItem({\n  index,\n  hovered,\n  data,\n  onSelect,\n  onTagUpdate,\n  onHover,\n  deleteLabel,\n  saveLabel,\n  editTagLabel,\n  tagNameEditLabel,\n  colors,\n  selected,\n  onTagDelete,\n  onEventsCaptureChange,\n  themeOverride,\n  enableUpdate,\n  enableDelete,\n  enableColorChange,\n  transitionDuration,\n  transition = 'skew-up',\n  transitionTimingFunction,\n}: TagItemProps) {\n  const classes = useStyles({ theme: useMantineTheme(themeOverride) });\n  const controlRef = useRef<HTMLButtonElement>();\n  const [editDropdownOpened, setEditDropdownOpened] = useState(false);\n  const reduceMotion = useReducedMotion();\n  const duration = reduceMotion ? 1 : transitionDuration;\n\n  const openEditDropdown = () => {\n    setEditDropdownOpened(true);\n    onEventsCaptureChange(false);\n  };\n\n  const closeEditDropdown = () => {\n    setEditDropdownOpened(false);\n    onEventsCaptureChange(true);\n\n    // Focus should be wrapped in setTimeout to prevent multiple keyboard events capturing\n    // since edit dropdown has focus trap, control cannot be focused until transition ended + 10ms for buffer\n    setTimeout(() => {\n      controlRef.current.focus();\n    }, transitionDuration + 35);\n  };\n\n  return (\n    <div\n      className={cx(classes.item, { [classes.hovered]: hovered === index })}\n      onMouseEnter={() => onHover(index)}\n    >\n      <Transition\n        duration={duration}\n        mounted={editDropdownOpened}\n        transition={transition}\n        timingFunction={transitionTimingFunction}\n        themeOverride={themeOverride}\n      >\n        {(transitionStyles) => (\n          <TagEdit\n            style={transitionStyles}\n            saveLabel={saveLabel}\n            tagNameEditLabel={tagNameEditLabel}\n            onClose={closeEditDropdown}\n            initialValues={data}\n            deleteLabel={deleteLabel}\n            colors={colors}\n            onTagUpdate={onTagUpdate}\n            onTagDelete={onTagDelete}\n            id={data.id}\n            enableDelete={enableDelete}\n            enableColorChange={enableColorChange}\n            themeOverride={themeOverride}\n          />\n        )}\n      </Transition>\n\n      <div className={classes.body}>\n        <button\n          role=\"option\"\n          type=\"button\"\n          aria-selected={!!selected && data.id === selected.id}\n          className={classes.control}\n          onClick={() => onSelect(data)}\n        >\n          <div className={classes.controlInner}>\n            <Badge\n              variant=\"light\"\n              className={classes.badge}\n              color={data.color}\n              fullWidth\n              style={{ cursor: 'pointer' }}\n              themeOverride={themeOverride}\n            >\n              {data.name}\n            </Badge>\n          </div>\n        </button>\n\n        {enableUpdate && (\n          <ActionIcon\n            onClick={openEditDropdown}\n            elementRef={controlRef}\n            themeOverride={themeOverride}\n            aria-label={editTagLabel}\n          >\n            <MenuIcon />\n          </ActionIcon>\n        )}\n      </div>\n    </div>\n  );\n}\n\nTagItem.displayName = '@mantine/tag-picker/TagItem';\n","import { createUseStyles } from 'react-jss';\nimport { MantineTheme, getFontStyles } from '@mantine/core';\n\ninterface TagPickerStyles {\n  theme: MantineTheme;\n}\n\nexport default createUseStyles(\n  {\n    tagsList: ({ theme }: TagPickerStyles) => ({\n      paddingTop: theme.spacing.xs,\n      paddingBottom: theme.spacing.xs,\n    }),\n\n    description: ({ theme }: TagPickerStyles) => ({\n      marginTop: theme.spacing.xs,\n      marginBottom: theme.spacing.xs,\n      padding: [0, theme.spacing.xs],\n    }),\n\n    searchInput: ({ theme }: TagPickerStyles) => ({\n      marginLeft: theme.spacing.xs,\n      marginRight: theme.spacing.xs,\n      marginBottom: theme.spacing.xs,\n    }),\n\n    createControl: ({ theme }: TagPickerStyles) => ({\n      ...getFontStyles(theme),\n      backgroundColor: 'transparent',\n      border: 0,\n      outline: 0,\n      paddingLeft: theme.spacing.xs,\n      paddingRight: theme.spacing.xs,\n      width: '100%',\n      textAlign: 'left',\n      height: 32,\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n      cursor: 'pointer',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n    }),\n\n    createControlBadge: {\n      display: 'block !important',\n    },\n\n    createControlLabel: ({ theme }: TagPickerStyles) => ({\n      marginRight: 10,\n      fontSize: theme.fontSizes.sm,\n    }),\n\n    createControlHovered: ({ theme }: TagPickerStyles) => ({\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n    }),\n  },\n  { link: true }\n);\n","import React from 'react';\nimport cx from 'clsx';\nimport { useFocusTrap } from '@mantine/hooks';\nimport {\n  TextInput,\n  Text,\n  Badge,\n  MantineThemeOverride,\n  useMantineTheme,\n  MantineTransition,\n} from '@mantine/core';\nimport { TagPickerColor, TagPickerTag } from '../types';\nimport { TagItem } from '../TagItem/TagItem';\nimport useStyles from './TagsList.styles';\n\nexport interface TagsListProps {\n  description?: string;\n  searchPlaceholder?: string;\n  searchQuery: string;\n  hovered: number;\n  value: TagPickerTag;\n  data: TagPickerTag[];\n  canCreate: boolean;\n  createLabel?: string;\n  tagNameEditLabel?: string;\n  saveLabel?: string;\n  deleteLabel?: string;\n  editTagLabel?: string;\n  colors: TagPickerColor[];\n  createColor: string;\n  onSearchChange(query: string): void;\n  onCreate(): void;\n  onTagUpdate(id: string, values: Omit<TagPickerTag, 'id'>): void;\n  onTagDelete(id: string): void;\n  onChange(value: TagPickerTag): void;\n  onHoveredChange(index: number): void;\n  onEventsCaptureChange(shouldCaptureEvents: boolean): void;\n  onArrowsCaptureChange(shouldCaptureArrowEvents: boolean): void;\n  themeOverride?: MantineThemeOverride;\n  enableCreate?: boolean;\n  enableUpdate?: boolean;\n  enableDelete?: boolean;\n  enableColorChange?: boolean;\n  transitionDuration?: number;\n  transition?: MantineTransition;\n  transitionTimingFunction?: string;\n}\n\nexport function TagsList({\n  searchQuery,\n  searchPlaceholder,\n  description,\n  hovered,\n  data,\n  value,\n  canCreate,\n  createLabel,\n  deleteLabel,\n  saveLabel,\n  editTagLabel,\n  tagNameEditLabel,\n  colors,\n  createColor,\n  onSearchChange,\n  onCreate,\n  onTagDelete,\n  onTagUpdate,\n  onChange,\n  onHoveredChange,\n  onEventsCaptureChange,\n  onArrowsCaptureChange,\n  themeOverride,\n  enableCreate,\n  enableUpdate,\n  enableDelete,\n  enableColorChange,\n  transitionDuration,\n  transition,\n  transitionTimingFunction,\n}: TagsListProps) {\n  const classes = useStyles({ theme: useMantineTheme(themeOverride) });\n  const focusTrapRef = useFocusTrap();\n\n  const tags = data.map((tag, index) => (\n    <TagItem\n      key={tag.id}\n      index={index}\n      hovered={hovered}\n      data={tag}\n      selected={value}\n      saveLabel={saveLabel}\n      tagNameEditLabel={tagNameEditLabel}\n      editTagLabel={editTagLabel}\n      onSelect={onChange}\n      onTagUpdate={onTagUpdate}\n      onHover={onHoveredChange}\n      colors={colors}\n      deleteLabel={deleteLabel}\n      onTagDelete={onTagDelete}\n      onEventsCaptureChange={onEventsCaptureChange}\n      enableUpdate={enableUpdate}\n      enableDelete={enableDelete}\n      enableColorChange={enableColorChange}\n      transition={transition}\n      transitionTimingFunction={transitionTimingFunction}\n      transitionDuration={transitionDuration}\n      themeOverride={themeOverride}\n    />\n  ));\n\n  return (\n    <div className={classes.tagsList} ref={focusTrapRef} role=\"listbox\">\n      <TextInput\n        themeOverride={themeOverride}\n        className={classes.searchInput}\n        placeholder={searchPlaceholder}\n        value={searchQuery}\n        onChange={(event) => onSearchChange(event.currentTarget.value)}\n        onFocus={() => onArrowsCaptureChange(true)}\n        onBlur={() => {\n          onHoveredChange(-1);\n          onArrowsCaptureChange(false);\n        }}\n      />\n\n      {description && (\n        <Text color=\"gray\" size=\"sm\" className={classes.description} themeOverride={themeOverride}>\n          {description}\n        </Text>\n      )}\n\n      <div>\n        {tags}\n\n        {enableCreate && canCreate && (\n          <button\n            className={cx(classes.createControl, {\n              [classes.createControlHovered]: hovered === data.length,\n            })}\n            type=\"button\"\n            onClick={onCreate}\n            onMouseEnter={() => onHoveredChange(data.length)}\n          >\n            <span className={classes.createControlLabel}>{createLabel || '+'}</span>\n            <Badge\n              variant=\"light\"\n              className={classes.createControlBadge}\n              color={createColor}\n              style={{ cursor: 'pointer' }}\n              themeOverride={themeOverride}\n            >\n              {searchQuery}\n            </Badge>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nTagsList.displayName = '@mantine/tag-picker/TagsList';\n","import { createUseStyles } from 'react-jss';\nimport { MantineTheme, getFocusStyles } from '@mantine/core';\n\nexport default createUseStyles(\n  {\n    tagPicker: {\n      position: 'relative',\n    },\n\n    dropdown: ({ theme }: { theme: MantineTheme }) => ({\n      border: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[2]\n      }`,\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n      width: 280,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n    }),\n\n    control: ({ theme }: { theme: MantineTheme }) => ({\n      ...getFocusStyles(theme),\n      border: 0,\n      padding: [0, 0],\n      borderRadius: 24,\n      cursor: 'pointer',\n      appearance: 'none',\n      WebkitAppearance: 'none',\n    }),\n  },\n  { link: true }\n);\n","import React from 'react';\nimport { useClickOutside, useReducedMotion } from '@mantine/hooks';\nimport { Paper, Transition, Badge, useMantineTheme } from '@mantine/core';\nimport { TagsList, TagsListProps } from '../TagsList/TagsList';\nimport useStyles from './TagPicker.styles';\n\nexport interface TagPickerProps extends TagsListProps {\n  dropdownOpened: boolean;\n  controlRef: React.RefCallback<HTMLButtonElement>;\n  openDropdown(): void;\n  closeDropdown(): void;\n  onEventsCaptureChange(shouldCaptureEvents: boolean): void;\n  noValueLabel: string;\n  labelledBy?: string;\n  controlId?: string;\n}\n\nexport function TagPicker({\n  dropdownOpened,\n  openDropdown,\n  closeDropdown,\n  controlRef,\n  value,\n  noValueLabel,\n  themeOverride,\n  transitionDuration,\n  controlId,\n  labelledBy,\n  transition = 'skew-up',\n  transitionTimingFunction,\n  ...others\n}: TagPickerProps) {\n  const theme = useMantineTheme(themeOverride);\n  const classes = useStyles({ theme });\n  const dropdownRef = useClickOutside(closeDropdown);\n  const reduceMotion = useReducedMotion();\n  const duration = reduceMotion ? 1 : transitionDuration;\n\n  return (\n    <div className={classes.tagPicker}>\n      <button\n        className={classes.control}\n        type=\"button\"\n        ref={controlRef}\n        onClick={openDropdown}\n        id={controlId}\n        aria-labelledby={labelledBy}\n        aria-haspopup=\"listbox\"\n        aria-expanded={dropdownOpened}\n      >\n        <Badge\n          color={(value && value.color) || 'gray'}\n          style={{ cursor: 'pointer', display: 'block' }}\n          themeOverride={themeOverride}\n        >\n          {(value && value.name) || noValueLabel}\n        </Badge>\n      </button>\n\n      <Transition\n        duration={duration}\n        mounted={dropdownOpened}\n        transition={transition}\n        timingFunction={transitionTimingFunction}\n        themeOverride={themeOverride}\n      >\n        {(transitionStyles) => (\n          <Paper\n            shadow=\"sm\"\n            className={classes.dropdown}\n            elementRef={dropdownRef}\n            style={transitionStyles}\n            themeOverride={themeOverride}\n            tabIndex={-1}\n          >\n            <TagsList\n              value={value}\n              transition={transition}\n              transitionDuration={transitionDuration}\n              transitionTimingFunction={transitionTimingFunction}\n              themeOverride={themeOverride}\n              {...others}\n            />\n          </Paper>\n        )}\n      </Transition>\n    </div>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { DefaultProps, MantineTransition } from '@mantine/core';\nimport { TagPickerTag, TagPickerColor } from './types';\nimport { TagPicker } from './TagPicker/TagPicker';\n\nfunction getRandomColor(colors: TagPickerColor[]) {\n  if (Array.isArray(colors)) {\n    return colors[Math.floor(Math.random() * colors.length)].color;\n  }\n\n  return null;\n}\n\nexport interface TagPickerProps extends DefaultProps {\n  /** Options which should be rendered in the dropdown list */\n  data: TagPickerTag[];\n\n  /** Currently selected tag */\n  value?: TagPickerTag;\n\n  /** Called when user selects tag */\n  onChange(value: TagPickerTag): void;\n\n  /** Possible colors which tag can have */\n  colors?: TagPickerColor[];\n\n  /** Description displayed after search input */\n  description?: string;\n\n  /** Label for create control */\n  createLabel?: string;\n\n  /** Label for delete control */\n  deleteLabel?: string;\n\n  /** aria-label for save control */\n  saveLabel?: string;\n\n  /** aria-label for tag name edit field */\n  tagNameEditLabel?: string;\n\n  /** aria-label for edit tag control */\n  editTagLabel?: string;\n\n  /** aria-labelledby attribute for button control */\n  labelledBy?: string;\n\n  /** Set id on control, use it to connect with label */\n  controlId?: string;\n\n  /** Tag with this value is displayed when value prop is null */\n  noValueLabel: string;\n\n  /** Search field placeholder */\n  searchPlaceholder?: string;\n\n  /** Enable user to create new tags */\n  enableCreate?: boolean;\n\n  /** Enable user to update existing tags */\n  enableUpdate?: boolean;\n\n  /** Enable user to delete existing tags */\n  enableDelete?: boolean;\n\n  /** Enable user to change tag colors */\n  enableColorChange?: boolean;\n\n  /** Mount/unmount transitions for all dropdowns */\n  transition?: MantineTransition;\n\n  /** Mount/unmount transitions transitionTimingFunction, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Mount/unmount transition duration for all dropdowns */\n  transitionDuration?: number;\n\n  /** Called when dropdown opens */\n  onDropdownOpen?(): void;\n\n  /** Called when dropdown closes */\n  onDropdownClose?(): void;\n\n  /** Called when search changes */\n  onSearchChange?(query: string): void;\n\n  /** Get control ref */\n  controlRef?: React.RefCallback<HTMLButtonElement>;\n\n  /** Called when user creates new tag */\n  onTagCreate?(values: Omit<TagPickerTag, 'id'>): TagPickerTag;\n\n  /** Called when user deletes tag */\n  onTagDelete?(id: string): void;\n\n  /** Called when user updates tag */\n  onTagUpdate?(id: string, values: Omit<TagPickerTag, 'id'>): void;\n}\n\nexport function TagPickerContainer({ transitionDuration = 250, ...props }: TagPickerProps) {\n  const controlRef = useRef<HTMLButtonElement>();\n  const [dropdownOpened, setDropdownOpened] = useState(false);\n  const [hovered, setHovered] = useState(-1);\n  const [query, setQuery] = useState('');\n  const [createColor, setCreateColor] = useState(getRandomColor(props.colors));\n  const [shouldCaptureEvents, setShouldCaptureEvents] = useState(true);\n  const [shouldCaptureArrowEvents, setShouldCaptureArrowEvents] = useState(true);\n\n  const closeDropdown = () => {\n    if (shouldCaptureEvents) {\n      setDropdownOpened(false);\n      setHovered(-1);\n      setQuery('');\n      setTimeout(() => controlRef.current.focus(), transitionDuration + 35);\n      typeof props.onDropdownClose === 'function' && props.onDropdownClose();\n    }\n  };\n\n  const openDropdown = () => {\n    setDropdownOpened(true);\n    typeof props.onDropdownOpen === 'function' && props.onDropdownOpen();\n  };\n\n  const handleSearchChange = (value: string) => {\n    setQuery(value);\n    setHovered(0);\n    typeof props.onSearchChange === 'function' && props.onSearchChange(value);\n  };\n\n  const handleCreate = () => {\n    props.onChange(props.onTagCreate({ color: createColor, name: query }));\n    setCreateColor(getRandomColor(props.colors));\n    closeDropdown();\n  };\n\n  const handleUpdate = (id: string, values: Omit<TagPickerTag, 'id'>) => {\n    if (props.value && props.value.id === id) {\n      props.onChange({ ...values, id });\n    }\n\n    props.onTagUpdate(id, values);\n  };\n\n  const handleChange = (value: TagPickerTag) => {\n    props.onChange(value);\n    closeDropdown();\n  };\n\n  const filteredData = props.data.filter((tag) =>\n    tag.name.toLowerCase().trim().includes(query.toLowerCase().trim())\n  );\n\n  const canCreate =\n    query.trim().length > 0 &&\n    props.data.every((tag) => tag.name.toLowerCase().trim() !== query.trim().toLowerCase());\n\n  const handleKeyboardEvents = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (dropdownOpened && shouldCaptureEvents) {\n      const { code } = event.nativeEvent;\n\n      if (code === 'Escape') {\n        event.preventDefault();\n        closeDropdown();\n      }\n\n      if (code === 'ArrowUp' && shouldCaptureArrowEvents) {\n        event.preventDefault();\n        const targetIndex = canCreate ? filteredData.length : filteredData.length - 1;\n        setHovered(hovered <= 0 ? targetIndex : hovered - 1);\n      }\n\n      if (code === 'ArrowDown' && shouldCaptureArrowEvents) {\n        event.preventDefault();\n        const targetIndex = canCreate ? hovered : hovered + 1;\n        setHovered(targetIndex === filteredData.length ? 0 : hovered + 1);\n      }\n\n      if (code === 'Enter' && hovered > -1) {\n        event.preventDefault();\n\n        if (filteredData[hovered]) {\n          handleChange(filteredData[hovered]);\n          closeDropdown();\n        }\n\n        if (canCreate && hovered === filteredData.length) {\n          handleCreate();\n        }\n      }\n    }\n  };\n\n  return (\n    <div onKeyDownCapture={handleKeyboardEvents} className={props.className} style={props.style}>\n      <TagPicker\n        createColor={createColor}\n        searchQuery={query}\n        hovered={hovered}\n        dropdownOpened={dropdownOpened}\n        controlRef={(node: HTMLButtonElement) => {\n          controlRef.current = node;\n          typeof props.controlRef === 'function' && props.controlRef(node);\n        }}\n        openDropdown={openDropdown}\n        closeDropdown={closeDropdown}\n        description={props.description}\n        searchPlaceholder={props.searchPlaceholder}\n        onSearchChange={handleSearchChange}\n        data={filteredData}\n        canCreate={canCreate}\n        value={props.value}\n        createLabel={props.createLabel}\n        saveLabel={props.saveLabel}\n        editTagLabel={props.editTagLabel}\n        deleteLabel={props.deleteLabel}\n        noValueLabel={props.noValueLabel}\n        tagNameEditLabel={props.tagNameEditLabel}\n        onCreate={handleCreate}\n        colors={props.colors}\n        onTagUpdate={handleUpdate}\n        onTagDelete={props.onTagDelete}\n        onChange={handleChange}\n        onHoveredChange={setHovered}\n        onEventsCaptureChange={setShouldCaptureEvents}\n        onArrowsCaptureChange={setShouldCaptureArrowEvents}\n        enableCreate={props.enableCreate}\n        enableUpdate={props.enableUpdate}\n        enableDelete={props.enableDelete}\n        enableColorChange={props.enableColorChange}\n        transitionDuration={transitionDuration}\n        transition={props.transition}\n        transitionTimingFunction={props.transitionTimingFunction}\n        themeOverride={props.themeOverride}\n      />\n    </div>\n  );\n}\n"],"names":["__spreadValues","createUseStyles","__spreadProps","getFontStyles","getFocusStyles","useMantineTheme","useStyles","useClickOutside","useFocusTrap","useState","ColorSwatch","Paper","TextInput","ActionIcon","useRef","useReducedMotion","cx","Transition","Badge","Text"],"mappings":"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"}